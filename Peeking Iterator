class PeekingIterator implements Iterator<Integer> {

    Integer cur ;
    Iterator<Integer> iterator;
	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
	    cur = null;
	    this.iterator = iterator;
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        if (cur == null && iterator.hasNext()){
            cur = iterator.next();
        }
        return cur;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
	    if (cur != null){
	        int rst = cur;
	        cur = null;
	        return rst;
	    } else {
	        
	        return iterator.next();
	    }
	}

	@Override
	public boolean hasNext() {
	    if (cur != null){
	        return true;
	    } else {
	        return iterator.hasNext();
	    }
	    
	}
}
